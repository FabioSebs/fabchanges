{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmgha\\\\Documents\\\\GitHub\\\\assignement2\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [value, setValue] = useState(\"all\");\n  const [tasks, setTasks] = useState([]);\n  const [id, setId] = useState(0);\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const addTask = task => {\n    //function to add\n    if (!task.text || /^\\s*$/.test(task.text)) {\n      //making sure that empty space doesn't get taken as an input\n      return;\n    }\n    setTasks([...tasks, {\n      id: task.id,\n      text: task.text\n    }]);\n  };\n  const updatedTask = newValue => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      //making sure that empty space doesn't get taken as an input\n      // return;\n    }\n    if (newValue.length) {\n      console.log(\"test\");\n      setTasks(prev => prev.map(item => item.text == newValue ? item.text = newValue : unde));\n      return;\n    }\n    setTasks(prev => prev.map(item => item.id === taskId ? newInput : item));\n  };\n  const completeTask = id => {\n    let updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.isComplete = !task.isComplete;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const removeTask = id => {\n    //function to delete\n    const removeArray = [...tasks].filter(task => task.id !== id);\n    setTasks(removeArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      tasks: tasks,\n      setTasks: setTasks,\n      onSubmit: addTask,\n      id: id,\n      setId: setId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"incompleted\",\n        children: \"Incompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      tasks: tasks,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      updateTask: updatedTask,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"jPMRsLfXdq56v9x7WKtK4dsyTgE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","Todo","jsxDEV","_jsxDEV","TodoList","_s","value","setValue","tasks","setTasks","id","setId","handleChange","event","target","addTask","task","text","test","updatedTask","newValue","length","console","log","prev","map","item","unde","taskId","newInput","completeTask","updatedTasks","isComplete","removeTask","removeArray","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","updateTask","_c","$RefreshReg$"],"sources":["C:/Users/hmgha/Documents/GitHub/assignement2/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const [value, setValue] = useState(\"all\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [id, setId] = useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n\r\n  const addTask = (task) => {\r\n    //function to add\r\n    if (!task.text || /^\\s*$/.test(task.text)) {\r\n      //making sure that empty space doesn't get taken as an input\r\n      return;\r\n    }\r\n    setTasks([...tasks, {id: task.id, text: task.text}]);\r\n  };\r\n\r\n  const updatedTask = (newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      //making sure that empty space doesn't get taken as an input\r\n      // return;\r\n    }\r\n\r\n    if (newValue.length) {\r\n      console.log(\"test\")\r\n      setTasks(prev => prev.map((item) => (item.text == newValue ? item.text = newValue : unde)));\r\n      return\r\n    }\r\n\r\n    setTasks(prev => prev.map((item) => (item.id === taskId ? newInput : item)));\r\n  };\r\n\r\n  const completeTask = (id) => {\r\n    let updatedTasks = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.isComplete = !task.isComplete;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    //function to delete\r\n    const removeArray = [...tasks].filter((task) => task.id !== id);\r\n\r\n    setTasks(removeArray);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>TODO LIST</h1>\r\n      <TodoForm tasks={tasks} setTasks={setTasks} onSubmit={addTask} id={id} setId={setId}/>\r\n      <select value={value} onChange={handleChange}>\r\n        <option value=\"all\">All</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"incompleted\">Incompleted</option>\r\n      </select>\r\n      <Todo tasks={tasks} completeTask={completeTask} removeTask={removeTask} updateTask={updatedTask} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}