{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmgha\\\\Documents\\\\GitHub\\\\assignement2\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoFormE from \"./TodoFormE\";\nimport { CgCloseO } from \"react-icons/cg\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(_ref) {\n  _s();\n  let {\n    tasks,\n    completeTask,\n    removeTask,\n    updateTask,\n    value\n  } = _ref;\n  const [update, setUpdate] = useState({\n    id: null,\n    value: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  const SubmitUpdate = update => {\n    updateTask(update.id, update.value);\n  };\n  function handleEdit(id, text) {\n    setUpdate({\n      id: id,\n      value: text\n    });\n    setEditMode(e => !e);\n  }\n  function filter(completed, show) {\n    //determines if the task should be show or not\n    if (show == \"all\") {\n      return true;\n    } else if (show == \"completed\") {\n      if (completed) return true;\n    } else if (show == \"incompleted\") {\n      if (!completed) return true;\n    } else {\n      return false;\n    }\n  }\n  if (editMode) {\n    return /*#__PURE__*/_jsxDEV(TodoFormE, {\n      update: update,\n      setUpdate: setUpdate,\n      updateTask: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return tasks.map((task, index) =>\n  //checks if the task should be shown and shows if is true\n  filter(task.isComplete, value) == true && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: task.isComplete ? \"task-row complete\" : \"task-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTask(task.id),\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      children: [/*#__PURE__*/_jsxDEV(CgCloseO, {\n        onClick: () => removeTask(task.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FiEdit, {\n        onClick: () => handleEdit(task.id, task.text),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n}\n_s(Todo, \"bgnzVFRu/Pt97OavbmsGkce2Bm8=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoFormE","CgCloseO","FiEdit","jsxDEV","_jsxDEV","Todo","_ref","_s","tasks","completeTask","removeTask","updateTask","value","update","setUpdate","id","editMode","setEditMode","SubmitUpdate","handleEdit","text","e","filter","completed","show","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","isComplete","className","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hmgha/Documents/GitHub/assignement2/src/components/Todo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoFormE from \"./TodoFormE\";\r\nimport { CgCloseO } from \"react-icons/cg\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\n\r\nfunction Todo({ tasks, completeTask, removeTask, updateTask, value}) {\r\n  const [update, setUpdate] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const SubmitUpdate = (update) => {\r\n    updateTask(update.id, update.value)\r\n  }\r\n\r\n  function handleEdit(id, text) {\r\n    setUpdate({ id: id, value: text })\r\n    setEditMode(e => !e)\r\n  }\r\n\r\n  function filter(completed, show){\r\n    //determines if the task should be show or not\r\n    if(show==\"all\"){\r\n      return true\r\n    }else if(show==\"completed\"){\r\n      if(completed)\r\n        return true\r\n    }else if(show==\"incompleted\"){\r\n      if(!completed)\r\n        return true\r\n    }else{\r\n      return false\r\n    }\r\n\r\n  }\r\n  \r\n  if(editMode) {\r\n    return <TodoFormE update={update} setUpdate={setUpdate} updateTask={updateTask} />;\r\n  }\r\n\r\n  return tasks.map((task, index) => (\r\n    //checks if the task should be shown and shows if is true\r\n    filter(task.isComplete,value) == true &&\r\n    <div\r\n      className={task.isComplete ? \"task-row complete\" : \"task-row\"}\r\n      key={index}\r\n    >\r\n      \r\n      <div key={task.id} onClick={() => completeTask(task.id)}>\r\n        {task.text}\r\n      </div>\r\n      <div className=\"icon\">\r\n        <CgCloseO onClick={() => removeTask(task.id)} className=\"delete-icon\" />\r\n        <FiEdit\r\n          onClick={() => handleEdit(task.id, task.text)} \r\n          className=\"edit-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  \r\n  ));\r\n}\r\n\r\n  \r\nexport default Todo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAAC,IAAA,EAAwD;EAAAC,EAAA;EAAA,IAAvD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAAN,IAAA;EACjE,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC;IACnCgB,EAAE,EAAE,IAAI;IACRH,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMmB,YAAY,GAAIL,MAAM,IAAK;IAC/BF,UAAU,CAACE,MAAM,CAACE,EAAE,EAAEF,MAAM,CAACD,KAAK,CAAC;EACrC,CAAC;EAED,SAASO,UAAUA,CAACJ,EAAE,EAAEK,IAAI,EAAE;IAC5BN,SAAS,CAAC;MAAEC,EAAE,EAAEA,EAAE;MAAEH,KAAK,EAAEQ;IAAK,CAAC,CAAC;IAClCH,WAAW,CAACI,CAAC,IAAI,CAACA,CAAC,CAAC;EACtB;EAEA,SAASC,MAAMA,CAACC,SAAS,EAAEC,IAAI,EAAC;IAC9B;IACA,IAAGA,IAAI,IAAE,KAAK,EAAC;MACb,OAAO,IAAI;IACb,CAAC,MAAK,IAAGA,IAAI,IAAE,WAAW,EAAC;MACzB,IAAGD,SAAS,EACV,OAAO,IAAI;IACf,CAAC,MAAK,IAAGC,IAAI,IAAE,aAAa,EAAC;MAC3B,IAAG,CAACD,SAAS,EACX,OAAO,IAAI;IACf,CAAC,MAAI;MACH,OAAO,KAAK;IACd;EAEF;EAEA,IAAGP,QAAQ,EAAE;IACX,oBAAOZ,OAAA,CAACJ,SAAS;MAACa,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACH,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACpF;EAEA,OAAOpB,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;EAC3B;EACAT,MAAM,CAACQ,IAAI,CAACE,UAAU,EAACpB,KAAK,CAAC,IAAI,IAAI,iBACrCR,OAAA;IACE6B,SAAS,EAAEH,IAAI,CAACE,UAAU,GAAG,mBAAmB,GAAG,UAAW;IAAAE,QAAA,gBAI9D9B,OAAA;MAAmB+B,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACqB,IAAI,CAACf,EAAE,CAAE;MAAAmB,QAAA,EACrDJ,IAAI,CAACV;IAAI,GADFU,IAAI,CAACf,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEX,eACNxB,OAAA;MAAK6B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB9B,OAAA,CAACH,QAAQ;QAACkC,OAAO,EAAEA,CAAA,KAAMzB,UAAU,CAACoB,IAAI,CAACf,EAAE,CAAE;QAACkB,SAAS,EAAC;MAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxExB,OAAA,CAACF,MAAM;QACLiC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACW,IAAI,CAACf,EAAE,EAAEe,IAAI,CAACV,IAAI,CAAE;QAC9Ca,SAAS,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA,GAZDG,KAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAeb,CAAC;AACJ;AAACrB,EAAA,CAzDQF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA4Db,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}