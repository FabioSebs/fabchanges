{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmgha\\\\Documents\\\\GitHub\\\\assignement2\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [value, setValue] = React.useState('all');\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const addTask = task => {\n    //function to add\n    if (!task.text || /^\\s*$/.test(task.text)) {\n      //making sure that empty space doesn't get taken as an input\n      return;\n    }\n    const newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  };\n  const updatedTask = (taskId, newInput) => {\n    if (!newInput.text || /^\\s*$/.test(newInput.text)) {\n      //making sure that empty space doesn't get taken as an input\n      // return;\n    }\n    if (newInput.length) {\n      console.log(\"test\");\n      setTasks(prev => prev.map(item => item.id === taskId ? item.value = newInput : item.value = newInput));\n    }\n    setTasks(prev => prev.map(item => item.id === taskId ? newInput : item));\n  };\n  const completeTask = id => {\n    let updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.isComplete = !task.isComplete;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const removeTask = id => {\n    //function to delete\n    const removeArray = [...tasks].filter(task => task.id !== id);\n    setTasks(removeArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"incompleted\",\n        children: \"Incompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      tasks: tasks,\n      completeTask: completeTask,\n      removeTask: removeTask,\n      updateTask: updatedTask,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"D6Xy2LIA1kcqPSBe8nxQUk24Zec=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","Todo","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","value","setValue","handleChange","event","target","addTask","task","text","test","newTasks","updatedTask","taskId","newInput","length","console","log","prev","map","item","id","completeTask","updatedTasks","isComplete","removeTask","removeArray","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","updateTask","_c","$RefreshReg$"],"sources":["C:/Users/hmgha/Documents/GitHub/assignement2/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [value, setValue] = React.useState('all');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n\r\n  const addTask = (task) => {\r\n    //function to add\r\n    if (!task.text || /^\\s*$/.test(task.text)) {\r\n      //making sure that empty space doesn't get taken as an input\r\n      return;\r\n    }\r\n\r\n    const newTasks = [task, ...tasks];\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const updatedTask = (taskId, newInput) => {\r\n    if (!newInput.text || /^\\s*$/.test(newInput.text)) {\r\n      //making sure that empty space doesn't get taken as an input\r\n      // return;\r\n    }\r\n\r\n    if (newInput.length) {\r\n      console.log(\"test\")\r\n      setTasks(prev => prev.map((item) => (item.id === taskId ? item.value = newInput : item.value =  newInput)));\r\n    }\r\n\r\n    setTasks(prev => prev.map((item) => (item.id === taskId ? newInput : item)));\r\n  };\r\n\r\n  const completeTask = (id) => {\r\n    let updatedTasks = tasks.map((task) => {\r\n      if (task.id === id) {\r\n        task.isComplete = !task.isComplete;\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    //function to delete\r\n    const removeArray = [...tasks].filter((task) => task.id !== id);\r\n\r\n    setTasks(removeArray);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>TODO LIST</h1>\r\n      <TodoForm onSubmit={addTask} />\r\n      <select value={value} onChange={handleChange}>\r\n        <option value=\"all\">All</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"incompleted\">Incompleted</option>\r\n      </select>\r\n      <Todo tasks={tasks} completeTask={completeTask} removeTask={removeTask} updateTask={updatedTask} value={value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}